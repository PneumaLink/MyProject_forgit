  1. C언어의 개발년도와 개발자를 설명하고 C언어 컴파일러의 종류를 간략하게 정리하세요.
1972년 켄 톰슨, 데니스 리치가 벨 연구소에서 일할 당시 새로 개발된 유닉스 운영체제에서 사용하기 위해 만든 프로그래밍 언어. 켄 톰슨이 BCPL언어를 필요에 맞추어 개조하여 B언어라 명명한것을 데니스 리치가 개선하여 C언어로 만들었다.

※BCPL : Basic Combined Programming Language는 1966년 케임브리지 대학교의 마틴 리처드가 설계한 절차적 명령형, 구조적 프로그래밍 언어. 원래 다른 언어들을 위한 컴파일러를 작성하기 위해 고안. {}를 사용한 최초의 프로그래밍 언어
 
컴파일러의 종류는 터보C, 볼랜드C, 비주얼C, WC, GCC등이 있다.

-출처-
https://ko.wikipedia.org/wiki/C_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)
https://ko.wikipedia.org/wiki/BCPL
https://m.blog.naver.com/PostView.nhn?blogId=itbank21c&logNo=221117936847&proxyReferer=https%3A%2F%2Fwww.google.com%2F
http://soen.kr/lecture/ccpp/cpp1/1-3-2.htm

  2. gcc가 무엇이며, g++과의 차이점을 정리하세요.
GCC(GNU Compiler Collection)은 GNU프로젝트의 일환으로 리처드 스톨만이 1987년에 개발해서 쓰이는 컴파일러다. GNU프로젝트에 컴파일러가 없었기 때문에 자유 소프트웨어 재단이 후원했다. 현재는 전 세계적으로 관리되고 있으며 다양한 중앙 처리 장치를 처리할 수 있다. 많은 컴파일러와 운영체제를 만드는데 사용되었다.

※GNU프로젝트 : 1983년 9월 27일 유즈넷 그룹을 통해 일반적으로 알려짐. GNU(GNU's Not UNIX) 누구나 자유롭게 실행,복사,수정,배포 할 수 있고, 누구도 그런 권리를 제한하면 안 된다는 사용 허가권 아래 소프트웨어를 배포했다.

g++은 c++전용 컴파일러로더 CNU C++ Compiler의 약자이다.
.c파일과 .cpp파일을 컴파일시 각각 c와 c++언어로서 컴파일 하며 오로지 c라이브러리와 링크되는 gcc와 달리 g++은 .c파일과  .cpp파일을 컴파일시 모두 c++언어로서 c++라이브러리와 링크된다. 따라서 c++언어로 작성된 .cpp파일을 gcc로 컴파일시 gcc가 .cpp파일을 컴파일한 후  c라이브러리로 링크되기 때문에 링크에러가 발생할 가능성이 있다.

-출처-
https://ko.wikipedia.org/wiki/GNU_%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC_%EB%AA%A8%EC%9D%8C
https://ko.wikipedia.org/wiki/GNU_%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8
https://hsunnystory.tistory.com/112

  3. gcc의 명령어 5가지를 찾아보고 정리하세요.
-o : 출력파일 옵션. source.c파일을 컴파일한 후 기본 이름을 ./opt로 사용하여 실행되는 대신 출력 파일을 opt로 제공
-Werror : 프로그램에 오류가있는 경우 소스를 컴파일하고 경고를 표시. -w
-Wall : 오류뿐만이 아닌 사용되지 않은 변수 오류와 같은 모든 종류의 경고를 검사.
-ggdb3 : gdb를 사용하여 프로그램을 디버깅 할 수 있는 권한을 부여. -g
-lm : math.h 라이브러리를 소스 파일에 연결. (-l 옵션은 특정 라이브러리를 연결하는데 사용된다. lm은 math.h를 사용)
-std=c11 : 프로그램 컴파일을 하기 위해 c11버전의 표준을 사용한다. 
-c : 프로그램을 컴파일하고 오브젝트 파일을 출력으로 제공하여 라이브러리를 작성하는데 사용.
-v : 자세한 내용 표시

-출처-
https://www.geeksforgeeks.org/gcc-command-in-linux-with-examples/
  
  4. 윈도우용 gcc를 설치(MinGW)하고 라이센스 종류가 무엇인지 정리하세요.
      (참고자료: https://mingtrace.tistory.com/446)
    
-출처-
http://www.mingw.org/

  5. A* 알고리즘을 정리하고 이해가 되면 참고자료 아래 A* 문제를 해결할 수 있는 코드를 작성하세요.
      (참고자료: https://ko.wikipedia.org/wiki/A*_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98)
      (8-퍼즐 문제)